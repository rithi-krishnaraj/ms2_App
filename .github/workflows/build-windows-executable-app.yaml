name: Build executable for Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-executable:
    runs-on: windows-latest

    env:
      PYTHON_VERSION: 3.11.0
      APP_NAME: MS2-Scan-Analyzer

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Download & unpack embeddable Python
      run: |
        mkdir python-${{ env.PYTHON_VERSION }}
        curl -O https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/python-${{ env.PYTHON_VERSION }}-embed-amd64.zip
        unzip python-${{ env.PYTHON_VERSION }}-embed-amd64.zip -d python-${{ env.PYTHON_VERSION }}
        rm python-${{ env.PYTHON_VERSION }}-embed-amd64.zip

    - name: Install pip into embeddable
      run: |
        curl -O https://bootstrap.pypa.io/get-pip.py
        ./python-${{ env.PYTHON_VERSION }}/python get-pip.py --no-warn-script-location
        rm get-pip.py

    - name: Enable site-packages
      run: |
        sed -i 's/#import site/import site/' python-${{ env.PYTHON_VERSION }}/python311._pth

    - name: Install Required Packages
      run: |
        .\\python-${{ env.PYTHON_VERSION }}\\python -m pip install Cython --no-warn-script-location
        .\\python-${{ env.PYTHON_VERSION }}\\python -m pip install numpy --no-warn-script-location
        .\\python-${{ env.PYTHON_VERSION }}\\python -m pip install -r requirements-windows.txt --no-warn-script-location

    - name: Create Launcher BAT file
      run: |
        echo "start /min .\\python-${{ env.PYTHON_VERSION }}\\python -m streamlit run ms2_main.py local" > ${{ env.APP_NAME }}.bat

    - name: Package application folder
      run: |
        mkdir dist_folder
        mv python-${{ env.PYTHON_VERSION }} dist_folder/
        cp -r src dist_folder/
        # No pages or assets directories present
        cp requirements-windows.txt dist_folder/
        cp README.md dist_folder/
        cp ${{ env.APP_NAME }}.bat dist_folder/

    - name: Generate Readme.txt
      shell: bash
      run: |
        cat <<EOF > dist_folder/Readme.txt
        Welcome to the ${{ env.APP_NAME }} application!

        To run the app:
        1. Open the installation folder
        2. Double-click "$ {{ env.APP_NAME }}.bat"

        If you need to change the port, edit .streamlit/config.toml:
        [server]
        port = 8502
        EOF

    - name: Install WiX Toolset
      run: |
        curl -LO https://github.com/wixtoolset/wix3/releases/download/wix3111rtm/wix311-binaries.zip
        unzip wix311-binaries.zip -d wix
        rm wix311-binaries.zip

    - name: Heat - Generate component wxs
      run: |
        ./wix/heat.exe dir dist_folder -gg -sfrag -sreg -srd \
          -template component -cg StreamlitExeFiles -dr AppSubFolder \
          -out streamlit_exe_files.wxs

    - name: Create VBScript success message
      shell: bash
      run: |
        cat <<EOF > ShowSuccessMessage.vbs
        MsgBox "The ${{ env.APP_NAME }} application was installed successfully.", vbInformation, "Installation Complete"
        EOF

    - name: Prepare SourceDir
      run: |
        mkdir SourceDir
        mv dist_folder/* SourceDir/
        cp ShowSuccessMessage.vbs SourceDir/
        echo "Sample License Text" > SourceDir/app_license.rtf

    - name: Generate streamlit_exe.wxs
      shell: bash
      run: |
        cat <<EOF > streamlit_exe.wxs
        <?xml version="1.0"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          <Product Id="*" Name="${{ env.APP_NAME }}" Language="1033" Version="1.0.0.0" Manufacturer="Your Org" UpgradeCode="PUT-GUID-HERE">
            <Package Id="*" InstallerVersion="300" Compressed="yes" InstallPrivileges="elevated" Platform="x64" />
            <Media Id="1" Cabinet="streamlit.cab" EmbedCab="yes" />

            <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLFOLDER" Name="${{ env.APP_NAME }}">
                  <Directory Id="AppSubFolder" Name="${{ env.APP_NAME }}" />
                  <Component Id="CreateAppFolder" Guid="PUT-GUID-HERE">
                    <CreateFolder>
                      <Permission User="Everyone" GenericAll="yes" />
                    </CreateFolder>
                  </Component>
                </Directory>
              </Directory>
              <Directory Id="DesktopFolder" />
            </Directory>

            <Feature Id="MainFeature" Title="Main Application" Level="1">
              <ComponentGroupRef Id="StreamlitExeFiles" />
              <ComponentRef Id="CreateAppFolder" />
              <ComponentRef Id="DesktopShortcutComponent" />
              <ComponentRef Id="InstallDirShortcutComponent" />
            </Feature>

            <Component Id="DesktopShortcutComponent" Guid="PUT-GUID-HERE" Directory="DesktopFolder">
              <Shortcut Id="DesktopShortcut" Name="${{ env.APP_NAME }}" Description="Launch" Target="[AppSubFolder]${{ env.APP_NAME }}.bat" WorkingDirectory="AppSubFolder" />
              <RegistryValue Root="HKCU" Key="Software\\YourOrg\\${{ env.APP_NAME }}" Name="DesktopShortcut" Type="integer" Value="1" KeyPath="yes" />
            </Component>

            <Component Id="InstallDirShortcutComponent" Guid="PUT-GUID-HERE" Directory="AppSubFolder">
              <Shortcut Id="InstallDirShortcut" Name="${{ env.APP_NAME }}" Description="Launch" Target="[AppSubFolder]${{ env.APP_NAME }}.bat" WorkingDirectory="AppSubFolder" />
              <RegistryValue Root="HKCU" Key="Software\\YourOrg\\${{ env.APP_NAME }}" Name="InstallFolderShortcut" Type="integer" Value="1" KeyPath="yes" />
            </Component>

            <Binary Id="ShowMessageScript" SourceFile="SourceDir/ShowSuccessMessage.vbs" />
            <CustomAction Id="ShowSuccessMessage" BinaryKey="ShowMessageScript" Execute="immediate" Return="check" />

            <InstallExecuteSequence>
              <Custom Action="ShowSuccessMessage" After="InstallFinalize">NOT Installed</Custom>
            </InstallExecuteSequence>

            <UI>
              <UIRef Id="WixUI_InstallDir" />
              <UIRef Id="WixUI_ErrorProgressText" />
            </UI>

            <WixVariable Id="WixUILicenseRtf" Value="SourceDir/app_license.rtf" />

          </Product>
        </Wix>
        EOF

    - name: Candle WiX Installer
      run: |
        ./wix/candle.exe streamlit_exe.wxs -out streamlit_exe.wixobj
        ./wix/candle.exe streamlit_exe_files.wxs -out streamlit_exe_files.wixobj

    - name: Light WiX Installer
      run: |
        ./wix/light.exe streamlit_exe.wixobj streamlit_exe_files.wixobj -ext WixUIExtension -sice:ICE60 -o "${{ env.APP_NAME }}.msi" -cultures:en-us
            
    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Executable-${{ env.APP_NAME }}
        path: ${{ env.APP_NAME }}.msi
