name: Build executable for Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-executable:
    runs-on: windows-latest

    env:
      PYTHON_VERSION: 3.11.0
      APP_NAME: MS2-Scan-Analyzer

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Setup Python Embeddable Version
      run: |
        mkdir python-${{ env.PYTHON_VERSION }}
        curl -O https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/python-${{ env.PYTHON_VERSION }}-embed-amd64.zip
        unzip python-${{ env.PYTHON_VERSION }}-embed-amd64.zip -d python-${{ env.PYTHON_VERSION }}
        rm python-${{ env.PYTHON_VERSION }}-embed-amd64.zip

    - name: Install pip
      run: |
        curl -O https://bootstrap.pypa.io/get-pip.py
        ./python-${{ env.PYTHON_VERSION }}/python get-pip.py --no-warn-script-location
        rm get-pip.py

    - name: Enable site-packages
      run: |
        sed -i 's/#import site/import site/' python-${{ env.PYTHON_VERSION }}/python311._pth

    - name: Install Required Packages
      run: .\python-${{ env.PYTHON_VERSION }}\python -m pip install -r requirements-windows.txt --no-warn-script-location

    - name: Create Launcher BAT File
      run: |
        echo "start /min .\python-${{ env.PYTHON_VERSION }}\python -m streamlit run ms2_main.py local" > ${{ env.APP_NAME }}.bat

    - name: Create Executable Folder
      run: |
        mkdir streamlit_exe
        mv python-${{ env.PYTHON_VERSION }} streamlit_exe
        cp -r assets streamlit_exe
        cp -r pages streamlit_exe 2>$null || echo "No 'pages' folder found"
        cp -r .streamlit streamlit_exe
        cp ms2_main.py streamlit_exe
        cp ${{ env.APP_NAME }}.bat streamlit_exe

    - name: Generate Readme
      shell: bash
      run: |
        cat <<EOF > streamlit_exe/Readme.txt
        Welcome to the ${{ env.APP_NAME }} application!

        To run the app:
        1. Open the installation folder
        2. Double-click ${{ env.APP_NAME }}.bat

        Thank you!
        EOF

    - name: Install WiX Toolset
      run: |
        curl -LO https://github.com/wixtoolset/wix3/releases/download/wix3111rtm/wix311-binaries.zip
        unzip wix311-binaries.zip -d wix
        rm wix311-binaries.zip

    - name: Heat - Generate .wxs from folder
      run: |
        ./wix/heat.exe dir streamlit_exe -gg -sfrag -sreg -srd -template component -cg StreamlitExeFiles -dr AppSubFolder -out streamlit_exe_files.wxs

    - name: Create VBScript Success Message
      shell: bash
      run: |
        cat <<EOF > ShowSuccessMessage.vbs
        MsgBox "The ${{ env.APP_NAME }} application was installed successfully.", vbInformation, "Installation Complete"
        EOF

    - name: Prepare SourceDir
      run: |
        mkdir SourceDir
        mv streamlit_exe/* SourceDir
        cp ShowSuccessMessage.vbs SourceDir
        cp assets/app_icon.ico SourceDir
        echo "Sample License Text" > SourceDir/app_license.rtf

    - name: Generate streamlit_exe.wxs
      shell: bash
      run: |
        cat <<EOF > streamlit_exe.wxs
        <?xml version="1.0"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          <Product Id="*" Name="${{ env.APP_NAME }}" Language="1033" Version="1.0.0" Manufacturer="Your Org" UpgradeCode="dca86a21-8f8c-4d99-8bdf-fake12345678">
            <Package InstallerVersion="500" Compressed="yes" InstallScope="perMachine" Platform="x64"/>
            <Media Id="1" Cabinet="media.cab" EmbedCab="yes"/>

            <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER"/>
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLFOLDER" Name="${{ env.APP_NAME }}">
                  <Directory Id="AppSubFolder" Name="${{ env.APP_NAME }}"/>
                </Directory>
              </Directory>
              <Directory Id="DesktopFolder"/>
            </Directory>

            <Feature Id="MainFeature" Title="Main App" Level="1">
              <ComponentGroupRef Id="StreamlitExeFiles"/>
              <ComponentRef Id="DesktopShortcutComponent"/>
            </Feature>

            <Component Id="DesktopShortcutComponent" Guid="B1110000-0000-0000-0000-000000000001" Directory="DesktopFolder">
              <Shortcut Id="AppShortcut" Name="${{ env.APP_NAME }}" Description="Launch" Target="[AppSubFolder]${{ env.APP_NAME }}.bat" WorkingDirectory="AppSubFolder" Icon="AppIcon"/>
              <RegistryValue Root="HKCU" Key="Software\\${{ env.APP_NAME }}" Name="Installed" Type="integer" Value="1" KeyPath="yes"/>
            </Component>

            <Icon Id="AppIcon" SourceFile="SourceDir/app_icon.ico"/>
            <Binary Id="VBSMessage" SourceFile="SourceDir/ShowSuccessMessage.vbs"/>
            <CustomAction Id="ShowSuccess" BinaryKey="VBSMessage" VBScriptCall="" Execute="immediate" Return="check"/>

            <InstallExecuteSequence>
              <Custom Action="ShowSuccess" After="InstallFinalize">NOT Installed</Custom>
            </InstallExecuteSequence>

            <UI>
              <UIRef Id="WixUI_InstallDir"/>
              <UIRef Id="WixUI_ErrorProgressText"/>
            </UI>

            <WixVariable Id="WixUILicenseRtf" Value="SourceDir/app_license.rtf"/>
          </Product>
        </Wix>
        EOF

    - name: Compile .wxs to .wixobj
      run: ./wix/candle.exe streamlit_exe.wxs streamlit_exe_files.wxs

    - name: Link .msi
      run: ./wix/light.exe -ext WixUIExtension -sice:ICE60 -o ${{ env.APP_NAME }}.msi streamlit_exe_files.wixobj streamlit_exe.wixobj

    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Executable-${{ env.APP_NAME }}
        path: ${{ env.APP_NAME }}.msi
